/*
 * Automatically generated by script/glsl2header.py
 */
/*
 * Copyright (C) 2023, unclearness
 * All rights reserved.
 */

#pragma once

#include <string>

namespace ugu {

static inline std::string vert_deferred_code =
    "#version 330 core\n"
    "layout(location = 0) in vec3 aPos;\n"
    "layout(location = 1) in vec2 aTexCoords;\n"
    "\n"
    "out vec2 TexCoords;\n"
    "\n"
    "void main() {\n"
    "  TexCoords = aTexCoords;\n"
    "  gl_Position = vec4(aPos, 1.0);\n"
    "}\n";
static inline std::string vert_gbuf_code =
    "#version 330 core\n"
    "layout(location = 0) in vec3 aPos;\n"
    "layout(location = 1) in vec3 aNormal;\n"
    "layout(location = 2) in vec2 aTexCoords;\n"
    "\n"
    "out vec3 FragPos;\n"
    "out vec2 TexCoords;\n"
    "out vec3 Normal;\n"
    "\n"
    "uniform mat4 model;\n"
    "uniform mat4 view;\n"
    "uniform mat4 projection;\n"
    "\n"
    "void main() {\n"
    "  vec4 worldPos = model * vec4(aPos, 1.0);\n"
    "  FragPos = worldPos.xyz;\n"
    "  TexCoords = aTexCoords;\n"
    "\n"
    "  mat3 normalMatrix = transpose(inverse(mat3(model)));\n"
    "  Normal = normalMatrix * aNormal;\n"
    "\n"
    "  gl_Position = projection * view * worldPos;\n"
    "}\n";
}  // namespace ugu
