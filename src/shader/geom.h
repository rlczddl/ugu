/*
 * Automatically generated by script/glsl2header.py
 */
/*
 * Copyright (C) 2023, unclearness
 * All rights reserved.
 */

#pragma once

#include <string>

namespace ugu {

static inline std::string geom_dummy_code =
    "#version 330\n"
    "layout(triangles) in;\n"
    "layout(triangle_strip, max_vertices = 3) out;\n"
    "\n"
    "in vec3 vFragPos[];\n"
    "in vec3 vViewPos[];\n"
    "in vec2 vTexCoords[];\n"
    "in vec3 vNormal[];\n"
    "in vec3 vWldNormal[];\n"
    "in vec3 vVertexColor[];\n"
    "\n"
    "out vec3 fragPos;\n"
    "out vec3 viewPos;\n"
    "out vec2 texCoords;\n"
    "out vec3 normal;\n"
    "out vec3 wldNormal;\n"
    "out vec3 vertexColor;\n"
    "// flat out int fid;\n"
    "\n"
    "void main() {\n"
    "  for (int i = 0; i < gl_in.length(); ++i) {\n"
    "    gl_Position = gl_in[i].gl_Position;\n"
    "    gl_PrimitiveID = gl_PrimitiveIDIn;\n"
    "    // fid = gl_PrimitiveIDIn;\n"
    "    fragPos = vFragPos[i];\n"
    "    viewPos = vViewPos[i];\n"
    "    texCoords = vTexCoords[i];\n"
    "    normal = vNormal[i];\n"
    "    wldNormal = vWldNormal[i];\n"
    "    vertexColor = vVertexColor[i];\n"
    "    EmitVertex();\n"
    "  }\n"
    "  EndPrimitive();\n"
    "}\n";
}
